import "tfplan/v2" as tfplan

mandatory_tags = [
  "ttl",
]

instances = filter tfplan.resource_changes as _, rc {
    rc.mode is "managed" and
		rc.type is "aws_instance"
}

tags = instances["aws_instance.foo[0]"]["change"]["after"]["tags"]

main = rule {
    all mandatory_tags as t {
        tags contains t
    }
}

#Validate that all instances of a specified resource type being modified
#have a specified top-level attribute in a given list

validate_attribute_in_list = func(type, attribute, allowed_values) {

    validated = true

    #Get all resource instances of the specified type
    resource_instances = find_resources_from_plan(type)

     #Loop through the resource instances
    for resource_instances as address, r {

        #Skip resource instances that are being destroyed
        #to avoid unnecessary policy violations

        if r.destroy and not r.requires_new {
            continue
        }

    }

    return validated
}